digraph ingressParserImpl{
parse_packet_out [shape=rectangle,label="parse_packet_out"]
parse_ethernet [shape=rectangle,label="parse_ethernet
(hdr.ethernet.eth_type)"]
parse_ipv4 [shape=rectangle,label="parse_ipv4
(hdr.ipv4.protocol)"]
parse_tcp [shape=rectangle,label="parse_tcp"]
parse_udp [shape=rectangle,label="parse_udp"]
parse_icmp [shape=rectangle,label="parse_icmp"]
accept [shape=rectangle,label="accept"]
reject [shape=rectangle,label="reject"]
__ingress_p4_entry_point [shape=rectangle,label="__ingress_p4_entry_point
(ig_intr_md.ingress_port)"]
__skip_to_packet [shape=rectangle,label="__skip_to_packet"]
__phase0 [shape=rectangle,label="__phase0"]
__resubmit [shape=rectangle,label="__resubmit"]
__check_resubmit [shape=rectangle,label="__check_resubmit
((bit<8>)ig_intr_md.resubmit_flag)"]
__ingress_metadata [shape=rectangle,label="__ingress_metadata"]
start [shape=rectangle,label="start"]
parse_packet_out -> parse_ethernet [label="always"]
parse_ethernet -> parse_ipv4 [label="16w0x800"]
parse_ethernet -> accept [label="default"]
parse_ipv4 -> parse_tcp [label="8w6"]
parse_ipv4 -> parse_udp [label="8w17"]
parse_ipv4 -> parse_icmp [label="8w1"]
parse_ipv4 -> accept [label="default"]
parse_tcp -> accept [label="always"]
parse_udp -> accept [label="always"]
parse_icmp -> accept [label="always"]
__ingress_p4_entry_point -> parse_packet_out [label="9w192"]
__ingress_p4_entry_point -> parse_ethernet [label="default"]
__skip_to_packet -> __ingress_p4_entry_point [label="always"]
__phase0 -> __skip_to_packet [label="always"]
__resubmit -> __skip_to_packet [label="always"]
__check_resubmit -> __phase0 [label="8w0 &&& 8w128"]
__check_resubmit -> __resubmit [label="8w128 &&& 8w128"]
__check_resubmit -> reject [label="fallthrough"]
__ingress_metadata -> __check_resubmit [label="always"]
start -> __ingress_metadata [label="always"]
}
